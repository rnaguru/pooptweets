name: pooptweets

on:
  schedule:
    - cron: '45 19 * * 2-5' # trigger at 1945 UTC on Tues/Wed/Thurs/Fri (30 min after PHESD ottawa scheduled workflow) - https://crontab.guru
  workflow_dispatch:

jobs:
  # Comment out or disable the check-for-update job
  # check-for-update:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check PHESD repo
  #       uses: actions/checkout@v2
  #       with: 
  #         repository: 'Delatolla-lab/PHESD'  # Public PHED repo

  #     - name: Fetch latest commit hash
  #       id: get_latest_commit
  #       run: echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

  #     - name: Load previous commit hash from file (if it exists)
  #       id: load_previous_commit
  #       run: |
  #         if [ -f .prev_commit ]; then 
  #           echo "prev_commit=$(cat .prev_commit)" >> $GITHUB_OUTPUT
  #         else
  #           echo "prev_commit=none" >> $GITHUB_OUTPUT
  #         fi

  #     - name: Compare commits (Handle first run)
  #       id: compare_commits
  #       run: |
  #         if [ "${{ steps.load_previous_commit.outputs.prev_commit }}" == "none" ]; then
  #           echo "No previous commit found. Assuming first run."
  #           echo "updated=true" >> $GITHUB_OUTPUT
  #         elif [ "${{ steps.get_latest_commit.outputs.commit }}" != "${{ steps.load_previous_commit.outputs.prev_commit }}" ]; then
  #           echo "updated=true" >> $GITHUB_OUTPUT
  #         else
  #           echo "updated=false" >> $GITHUB_OUTPUT
  #         fi
     
  #     - name: Save latest commit hash to file
  #       run: |
  #         echo "${{ steps.get_latest_commit.outputs.commit }}" > .prev_commit

  # Keep the pooptweets-post job and remove the needs condition
  pooptweets-post:
    # Remove the "needs" so this job doesn't depend on check-for-update
    runs-on: macOS-latest
    env:
      RBOT_TWITTER_API_KEY: ${{ secrets.RBOT_TWITTER_API_KEY }}
      RBOT_TWITTER_API_SECRET: ${{ secrets.RBOT_TWITTER_API_SECRET }}
      RBOT_TWITTER_ACCESS_KEY: ${{ secrets.RBOT_TWITTER_ACCESS_KEY }}
      RBOT_TWITTER_ACCESS_SECRET: ${{ secrets.RBOT_TWITTER_ACCESS_SECRET }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}  # needed for remote access
      RBOT_BSKY_ACCESS_USER: ${{ secrets.RBOT_BSKY_ACCESS_USER }}
      RBOT_BSKY_ACCESS_PASSWORD: ${{ secrets.RBOT_BSKY_ACCESS_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - name: Create cache directory
        run: mkdir -p ~/.cache/R
      - name: Cache R package dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/R
          key: ${{ runner.os }}-r-${{ hashFiles('**/lockfile') }}
          restore-keys: |
            ${{ runner.os }}-r-
      - uses: r-lib/actions/setup-r@v2
      - name: Install R packages
        run: |
          Rscript -e 'install.packages(c("rtweet", "cowplot", "gghighlight", "tidyverse", "tidyquant", "dplyr", "zoo", "ggrepel", "ggplot2", "bskyr"), dependencies = TRUE)'
          Rscript -e 'remotes::install_github("rnaguru/ern")'
      - name: Run the R script
        run: Rscript ottawacov2tweet.R
